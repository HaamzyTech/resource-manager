create table "public"."measure" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "name" text not null,
    "description" text not null
);


alter table "public"."measure" enable row level security;

create table "public"."profile" (
    "id" bigint generated by default as identity not null,
    "first_name" text not null,
    "last_name" text not null,
    "email" text not null,
    "avatar" text,
    "created_at" timestamp with time zone not null default now(),
    "user_id" uuid
);


alter table "public"."profile" enable row level security;

create table "public"."resource" (
    "id" bigint generated by default as identity not null,
    "name" text not null,
    "description" text not null,
    "created_at" timestamp with time zone not null default now()
);


alter table "public"."resource" enable row level security;

create table "public"."resource_quantity" (
    "id" bigint generated by default as identity not null,
    "product_id" bigint,
    "date" date,
    "quantity" double precision,
    "created_at" timestamp with time zone not null default now(),
    "measure" bigint
);


alter table "public"."resource_quantity" enable row level security;

create table "public"."role" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "name" text not null
);


alter table "public"."role" enable row level security;

CREATE UNIQUE INDEX measure_pkey ON public.measure USING btree (id);

CREATE UNIQUE INDEX product_pkey ON public.resource USING btree (id);

CREATE UNIQUE INDEX product_quantity_pkey ON public.resource_quantity USING btree (id);

CREATE UNIQUE INDEX profile_pkey ON public.profile USING btree (id);

CREATE UNIQUE INDEX role_pkey ON public.role USING btree (id);

alter table "public"."measure" add constraint "measure_pkey" PRIMARY KEY using index "measure_pkey";

alter table "public"."profile" add constraint "profile_pkey" PRIMARY KEY using index "profile_pkey";

alter table "public"."resource" add constraint "product_pkey" PRIMARY KEY using index "product_pkey";

alter table "public"."resource_quantity" add constraint "product_quantity_pkey" PRIMARY KEY using index "product_quantity_pkey";

alter table "public"."role" add constraint "role_pkey" PRIMARY KEY using index "role_pkey";

alter table "public"."profile" add constraint "profile_user_id_fkey" FOREIGN KEY (user_id) REFERENCES auth.users(id) not valid;

alter table "public"."profile" validate constraint "profile_user_id_fkey";

alter table "public"."resource_quantity" add constraint "product_quantity_measure_fkey" FOREIGN KEY (measure) REFERENCES measure(id) not valid;

alter table "public"."resource_quantity" validate constraint "product_quantity_measure_fkey";

alter table "public"."resource_quantity" add constraint "product_quantity_product_id_fkey" FOREIGN KEY (product_id) REFERENCES resource(id) ON DELETE CASCADE not valid;

alter table "public"."resource_quantity" validate constraint "product_quantity_product_id_fkey";

set check_function_bodies = off;

CREATE OR REPLACE FUNCTION public.resource_totals()
 RETURNS jsonb
 LANGUAGE plpgsql
AS $function$DECLARE
  result Jsonb;
BEGIN
  select jsonb_agg(
    jsonb_build_object( 
      'resource_id', aggregated_data.id, 
      'resource_name', aggregated_data.name, 
      'resource_total', total
    )
  ) into result
  from ( 
    select r.id, r.name, SUM(rq.quantity) as total 
    from public.resource r
    join public.resource_quantity rq on r.id = rq.product_id
    group by r.id, r.name
  ) as aggregated_data;

  return result;
END;$function$
;

grant delete on table "public"."measure" to "anon";

grant insert on table "public"."measure" to "anon";

grant references on table "public"."measure" to "anon";

grant select on table "public"."measure" to "anon";

grant trigger on table "public"."measure" to "anon";

grant truncate on table "public"."measure" to "anon";

grant update on table "public"."measure" to "anon";

grant delete on table "public"."measure" to "authenticated";

grant insert on table "public"."measure" to "authenticated";

grant references on table "public"."measure" to "authenticated";

grant select on table "public"."measure" to "authenticated";

grant trigger on table "public"."measure" to "authenticated";

grant truncate on table "public"."measure" to "authenticated";

grant update on table "public"."measure" to "authenticated";

grant delete on table "public"."measure" to "service_role";

grant insert on table "public"."measure" to "service_role";

grant references on table "public"."measure" to "service_role";

grant select on table "public"."measure" to "service_role";

grant trigger on table "public"."measure" to "service_role";

grant truncate on table "public"."measure" to "service_role";

grant update on table "public"."measure" to "service_role";

grant delete on table "public"."profile" to "anon";

grant insert on table "public"."profile" to "anon";

grant references on table "public"."profile" to "anon";

grant select on table "public"."profile" to "anon";

grant trigger on table "public"."profile" to "anon";

grant truncate on table "public"."profile" to "anon";

grant update on table "public"."profile" to "anon";

grant delete on table "public"."profile" to "authenticated";

grant insert on table "public"."profile" to "authenticated";

grant references on table "public"."profile" to "authenticated";

grant select on table "public"."profile" to "authenticated";

grant trigger on table "public"."profile" to "authenticated";

grant truncate on table "public"."profile" to "authenticated";

grant update on table "public"."profile" to "authenticated";

grant delete on table "public"."profile" to "service_role";

grant insert on table "public"."profile" to "service_role";

grant references on table "public"."profile" to "service_role";

grant select on table "public"."profile" to "service_role";

grant trigger on table "public"."profile" to "service_role";

grant truncate on table "public"."profile" to "service_role";

grant update on table "public"."profile" to "service_role";

grant delete on table "public"."resource" to "anon";

grant insert on table "public"."resource" to "anon";

grant references on table "public"."resource" to "anon";

grant select on table "public"."resource" to "anon";

grant trigger on table "public"."resource" to "anon";

grant truncate on table "public"."resource" to "anon";

grant update on table "public"."resource" to "anon";

grant delete on table "public"."resource" to "authenticated";

grant insert on table "public"."resource" to "authenticated";

grant references on table "public"."resource" to "authenticated";

grant select on table "public"."resource" to "authenticated";

grant trigger on table "public"."resource" to "authenticated";

grant truncate on table "public"."resource" to "authenticated";

grant update on table "public"."resource" to "authenticated";

grant delete on table "public"."resource" to "service_role";

grant insert on table "public"."resource" to "service_role";

grant references on table "public"."resource" to "service_role";

grant select on table "public"."resource" to "service_role";

grant trigger on table "public"."resource" to "service_role";

grant truncate on table "public"."resource" to "service_role";

grant update on table "public"."resource" to "service_role";

grant delete on table "public"."resource_quantity" to "anon";

grant insert on table "public"."resource_quantity" to "anon";

grant references on table "public"."resource_quantity" to "anon";

grant select on table "public"."resource_quantity" to "anon";

grant trigger on table "public"."resource_quantity" to "anon";

grant truncate on table "public"."resource_quantity" to "anon";

grant update on table "public"."resource_quantity" to "anon";

grant delete on table "public"."resource_quantity" to "authenticated";

grant insert on table "public"."resource_quantity" to "authenticated";

grant references on table "public"."resource_quantity" to "authenticated";

grant select on table "public"."resource_quantity" to "authenticated";

grant trigger on table "public"."resource_quantity" to "authenticated";

grant truncate on table "public"."resource_quantity" to "authenticated";

grant update on table "public"."resource_quantity" to "authenticated";

grant delete on table "public"."resource_quantity" to "service_role";

grant insert on table "public"."resource_quantity" to "service_role";

grant references on table "public"."resource_quantity" to "service_role";

grant select on table "public"."resource_quantity" to "service_role";

grant trigger on table "public"."resource_quantity" to "service_role";

grant truncate on table "public"."resource_quantity" to "service_role";

grant update on table "public"."resource_quantity" to "service_role";

grant delete on table "public"."role" to "anon";

grant insert on table "public"."role" to "anon";

grant references on table "public"."role" to "anon";

grant select on table "public"."role" to "anon";

grant trigger on table "public"."role" to "anon";

grant truncate on table "public"."role" to "anon";

grant update on table "public"."role" to "anon";

grant delete on table "public"."role" to "authenticated";

grant insert on table "public"."role" to "authenticated";

grant references on table "public"."role" to "authenticated";

grant select on table "public"."role" to "authenticated";

grant trigger on table "public"."role" to "authenticated";

grant truncate on table "public"."role" to "authenticated";

grant update on table "public"."role" to "authenticated";

grant delete on table "public"."role" to "service_role";

grant insert on table "public"."role" to "service_role";

grant references on table "public"."role" to "service_role";

grant select on table "public"."role" to "service_role";

grant trigger on table "public"."role" to "service_role";

grant truncate on table "public"."role" to "service_role";

grant update on table "public"."role" to "service_role";

create policy "Enable insert for authenticated users only"
on "public"."profile"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for all users"
on "public"."profile"
as permissive
for select
to authenticated
using (true);


create policy "Enable insert for authenticated users only"
on "public"."resource"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for authenticated users"
on "public"."resource"
as permissive
for select
to authenticated
using (true);


create policy "Enable update for users based on email"
on "public"."resource"
as permissive
for update
to authenticated
using (true)
with check (true);


create policy "Enable insert for authenticated users only"
on "public"."resource_quantity"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for all users"
on "public"."resource_quantity"
as permissive
for select
to authenticated
using (true);


create policy "Enable update for users based on email"
on "public"."resource_quantity"
as permissive
for update
to authenticated
using (true)
with check (true);



